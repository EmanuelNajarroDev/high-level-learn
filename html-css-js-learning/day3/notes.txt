Day 3 notes

1. Void elements do not need a closing tag

2. Input element will create types of input boxes

3. block elements take up entire line

4. inline-block element only takes up as much space as it needs

5. inline element are just text elements that appear on a line of text

6. display: block takes up entire line or line within div, inline-block only takes up
what is necessary

7. Nested Layouts Technique, vertical layout vs horizontal layout 
---    |||
--- Vs |||
---    ||| 

8. IT IS USEFUL TO USE IMAGE EDITING SOFTWARE TO IDENTIFY NESTED LAYOUTS

9. For nested layouts, it always helps to take the entire object or element,
and break it down via some editing program. This is good for understanding
the necessary structure for our nested divs.

10. font-weight setss how thick or thin charaters in text
should be

11. There are multiple ways to achieve some kind of organization for a webpage.
This includes using classes and css(blocks, inline-blocks, inline,) alongside divs, grids, 
and flexboxes.

12.align-items: used within Flexbox and Grid layouts to control the alignment 
of items along the cross axis of their container. Max-width will limit elements 
to a set number of units and will resize with the window until it reaches its limit

13.Remember the default measurements for various elements(divs, text, body, etc)

14.Justify-content: It determines how extra space within the container is 
distributed when the items don't fully occupy the main axis.
It controls the positioning of the flex items, allowing you to align them at 
the beginning, end, center, or distribute the space between and around them. 


15.style="" allows for css to be used within elements

16. When dealing with css position, if an element is below another element,
it will appear on top of the first element. This rule does not to apply to 
position static but it does apply to position relative

17. z-index is required to fix this



